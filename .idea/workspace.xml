<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="1f66b9fb-5e7c-4099-9f0d-25590f8807da" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/constants/Commands.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/constants/Commands.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Application.Main.executor": "Run",
    "JUnit.CommandHandlerTest.executor": "Run",
    "JUnit.CommandTest.executor": "Run",
    "JUnit.CommandTest.testToString_WithArguments.executor": "Debug",
    "JUnit.ContinentTest.executor": "Run",
    "JUnit.MapTest.getContinentByID_ContinentExists.executor": "Run",
    "JUnit.MapValidatorTest.executor": "Run",
    "JUnit.TestSuite.executor": "Run",
    "Maven.Warzone [test].executor": "Run",
    "git-widget-placeholder": "develop",
    "node.js.selected.package.tslint": "(autodetect)"
  }
}]]></component>
  <component name="RunManager" selected="JUnit.MapValidatorTest">
    <configuration name="CommandHandlerTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="Warzone" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="controllers.CommandHandler.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="controllers.CommandHandler" />
      <option name="MAIN_CLASS_NAME" value="controllers.CommandHandler.CommandHandlerTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="CommandTest.testToString_WithArguments" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="Warzone" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="models.Command.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="models.Command" />
      <option name="MAIN_CLASS_NAME" value="models.Command.CommandTest" />
      <option name="METHOD_NAME" value="testToString_WithArguments" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinentTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="Warzone" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="models.Continent.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="models.Continent" />
      <option name="MAIN_CLASS_NAME" value="models.Continent.ContinentTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="MapTest.getContinentByID_ContinentExists" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="Warzone" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="models.Map.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="models.Map" />
      <option name="MAIN_CLASS_NAME" value="models.Map.MapTest" />
      <option name="METHOD_NAME" value="getContinentByID_ContinentExists" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="MapValidatorTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="Warzone" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="models.Map.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="models.Map" />
      <option name="MAIN_CLASS_NAME" value="models.Map.MapValidatorTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.MapValidatorTest" />
        <item itemvalue="JUnit.CommandHandlerTest" />
        <item itemvalue="JUnit.ContinentTest" />
        <item itemvalue="JUnit.CommandTest.testToString_WithArguments" />
        <item itemvalue="JUnit.MapTest.getContinentByID_ContinentExists" />
      </list>
    </recent_temporary>
  </component>
  <component name="TaskManager">
    <servers />
  </component>
</project>